[user]
    name  = Dennis B
    email = bluz71@users.noreply.github.com
[push]
    default = simple
[core]
    autocrlf = input
    pager    = diff-so-fancy | less
[color]
    ui = auto
[diff]
    tool      = meld
    algorithm = histogram
[merge]
    tool = meld
[difftool]
    prompt = false
[difftool "vd"]
    cmd = nvim -d "$LOCAL" "$REMOTE"
[difftool "icd"]
    cmd = icdiff --line-numbers "$LOCAL" "$REMOTE"
[mergetool]
    keepBackup = false
[advice]
    waitingForEditor = false
[diff-so-fancy]
    markEmptyLines = false
[help]
    format = html
[alias]
    # aliases list
    aliases = !git config --list | grep alias | grep -v format | cut -c7- | sort | bat -l ini --style=plain --paging never
    # misc
    fe = fetch
    rf = reflog
    st = status --short --branch
    # branch
    bb   = branch -vv --sort=-committerdate
    bd   = branch -d
    # checkout
    co  = checkout
    cob = checkout -b
    # stage
    sg = !git add . -N && git add -p
    # commit
    ci   = commit
    unci = reset --soft HEAD~1
    oops = commit --amend
    # reset
    reverse = reset --hard
    unadd   = reset HEAD
    # diff
    di   = diff
    dis  = diff --staged
    vdi  = difftool -t vd
    vdis = difftool -t vd --staged
    idi  = difftool -t icd
    idis = difftool -t icd --staged
    mdi  = difftool
    mdis = difftool --staged
    # log
    ll  = log --graph --format='%C(yellow)%h%C(red)%d%C(reset) - %C(bold green)(%ar)%C(reset) %s %C(blue){%an}%C(reset)'
    llm = !git ll master..HEAD
    llu = !git ll @{upstream}..HEAD
    lld = !git ll HEAD..@{upstream}
    # merge
    mg   = merge
    mgs  = merge --squash
    unmg = reset --merge ORIG_HEAD
    # remote
    rr  = remote -v
    rso = remote show origin
    rsu = remote show upstream
    # stash
    sa = !sh -c 'git stash apply stash@{$1}' -
    sd = !sh -c 'git stash drop stash@{$1}' -
    sh = show
    sl = stash list
    ss = stash save --include-untracked
    # enhanced 'bb' command with commit date, commit author and aligned branch
    bbl = "!_f() \
      { \
        longest_branch=$(git branch --format='%(refname:short)' $@ | awk '{ print length() }' | sort -r -n | head -1); \
        width=$(($longest_branch + 3)); \
        git bb --format=\"%(HEAD) %(align:$width)%(color:green)%(refname:short)%(end) %(color:yellow)%(objectname:short)%(if)%(upstream)%(then)%(color:red) [%(upstream:short)]%(end)%(color:reset) - %(color:green bold)(%(committerdate:relative)) %(color:reset)%(contents:subject) %(color:blue){%(authorname)}%(color:reset)\" $@; \
      }; _f"
